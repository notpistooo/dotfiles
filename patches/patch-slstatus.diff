diff -uNr slstatus/components/volume.c suckless/slstatus/components/volume.c
--- slstatus/components/volume.c	2025-02-07 09:53:23.173183460 +0100
+++ suckless/slstatus/components/volume.c	2025-01-31 16:07:39.089258057 +0100
@@ -182,6 +182,68 @@
 
 		return bprintf("%d", value);
 	}
+#elif defined(ALSA)
+	#include <alsa/asoundlib.h>
+
+	static const char *devname = "default";
+	const char *
+	vol_perc(const char *mixname)
+	{
+		snd_mixer_t *mixer = NULL;
+		snd_mixer_selem_id_t *mixid = NULL;
+		snd_mixer_elem_t *elem = NULL;
+		long min = 0, max = 0, volume = -1;
+		int err, sw1, sw2;
+
+		if ((err = snd_mixer_open(&mixer, 0))) {
+			warn("snd_mixer_open: %d", err);
+			return NULL;
+		}
+		if ((err = snd_mixer_attach(mixer, devname))) {
+			warn("snd_mixer_attach(mixer, \"%s\"): %d", devname, err);
+			goto cleanup;
+		}
+		if ((err = snd_mixer_selem_register(mixer, NULL, NULL))) {
+			warn("snd_mixer_selem_register(mixer, NULL, NULL): %d", err);
+			goto cleanup;
+		}
+		if ((err = snd_mixer_load(mixer))) {
+			warn("snd_mixer_load(mixer): %d", err);
+			goto cleanup;
+		}
+
+		snd_mixer_selem_id_alloca(&mixid);
+		snd_mixer_selem_id_set_name(mixid, mixname);
+		snd_mixer_selem_id_set_index(mixid, 0);
+
+		elem = snd_mixer_find_selem(mixer, mixid);
+		if (!elem) {
+			warn("snd_mixer_find_selem(mixer, \"%s\") == NULL", mixname);
+			goto cleanup;
+		}
+
+		if ((err = snd_mixer_selem_get_playback_volume_range(elem, &min, &max))) {
+			warn("snd_mixer_selem_get_playback_volume_range(): %d", err);
+			goto cleanup;
+		}
+		if ((err = snd_mixer_selem_get_playback_volume(elem, SND_MIXER_SCHN_MONO, &volume))) {
+			warn("snd_mixer_selem_get_playback_volume(): %d", err);
+		}
+		if ((err = snd_mixer_selem_get_playback_switch(elem, 0, &sw1))) {
+			warn("snd_mixer_selem_get_playback_switch(): %d", err);
+		}
+		if ((err = snd_mixer_selem_get_playback_switch(elem, 1, &sw2))) {
+			warn("snd_mixer_selem_get_playback_switch(): %d", err);
+		}
+
+	cleanup:
+		snd_mixer_free(mixer);
+		snd_mixer_detach(mixer, devname);
+		snd_mixer_close(mixer);
+
+		return volume == -1 ? NULL : bprintf("%s%.0f",
+			!(sw1 || sw2) ? "muted " : "", (volume-min)*100./(max-min));
+	}
 #else
 	#include <sys/soundcard.h>
 
diff -uNr slstatus/config.def.h suckless/slstatus/config.def.h
--- slstatus/config.def.h	2025-02-07 09:53:23.173183460 +0100
+++ suckless/slstatus/config.def.h	2025-01-31 20:10:59.070610001 +0100
@@ -65,5 +65,10 @@
  */
 static const struct arg args[] = {
 	/* function format          argument */
-	{ datetime, "%s",           "%F %T" },
+	{ datetime, "%s;",          "%A %B %d %Y" },
+	{ cpu_perc, "%s% | ",       NULL },
+	{ ram_perc, "%s% | ",       NULL },
+	{ vol_perc, "%s% | ",       "Master" },
+	{ keymap,   "[%s]",         NULL },
+	{ datetime, " | %s    ",    "%I:%M %p" },
 };
diff -uNr slstatus/config.mk suckless/slstatus/config.mk
--- slstatus/config.mk	2025-02-07 09:53:23.173183460 +0100
+++ suckless/slstatus/config.mk	2025-01-31 16:08:04.862591965 +0100
@@ -11,9 +11,9 @@
 X11LIB = /usr/X11R6/lib
 
 # flags
-CPPFLAGS = -I$(X11INC) -D_DEFAULT_SOURCE -DVERSION=\"${VERSION}\"
+CPPFLAGS = -I$(X11INC) -D_DEFAULT_SOURCE -DVERSION=\"${VERSION}\" -DALSA
 CFLAGS   = -std=c99 -pedantic -Wall -Wextra -Wno-unused-parameter -Os
-LDFLAGS  = -L$(X11LIB) -s
+LDFLAGS  = -L$(X11LIB) -s -lasound
 # OpenBSD: add -lsndio
 # FreeBSD: add -lkvm -lsndio
 LDLIBS   = -lX11
